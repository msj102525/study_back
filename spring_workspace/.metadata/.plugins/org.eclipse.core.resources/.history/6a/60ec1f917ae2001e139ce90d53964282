package org.myweb.first.member.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.myweb.first.member.model.service.MemberService;
import org.myweb.first.member.model.vo.Member;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
public class MemberController {
	
	// 서비스 연결  처리 : 자동 DI 처리
	@Autowired
	private MemberService memberService; //= new MemberServiceImpl();
	// 스프링에서는 부모 인터페이스 타입으로 레퍼런스 선언함 (다형성 이용함)
	// 실행시 후손의 오버라이딩된 메소드를 연결 실행하게 됨 (동적 바인딩 이라고 함)
	
	// 뷰 페이지 내보내기용 메소드 ----------------------
	@RequestMapping(value="loginPage.do", method={RequestMethod.GET, RequestMethod.POST})
	public String moveLoginPage() {
		return "member/loginPage";
	}
	
	// 요청 받아서 모델쪽 서비스로 넘기고 결과받는 메소드 -------------------------
	// 로그인 처리용 메소드 : Servlet 방식으로 처리
	@RequestMapping(value="login.do", method=RequestMethod.POST)
	public String loginMethod(HttpServletRequest request, HttpServletResponse response) {
		//1. 전송온 값 꺼내서 객체에 저장하기
		Member member = new Member();
		member.setUserId(request.getParameter("userid"));
		member.setUserPwd(request.getParameter("userpwd"));
		
		//2. 서비스 메소드로 객체 전달하고 실행된 결과 받기
		Member loginMember = memberService.selectLogin(member);
		
		//3. 받은 결과를 가지고 성공 또는 실패 페이지 내보내기
		if(loginMember != null) {
			
		} else {
			
		}
		return "";
	}
	
	
}
